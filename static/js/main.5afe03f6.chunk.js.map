{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/giftPalletProvider.js","substrate-lib/components/DeveloperConsole.js","substrate-lib/components/QrSigner.js","components/Processing.js","components/CustomButton.js","pages/gift/claim/Claimed.js","pages/gift/claim/VerifySecret.js","components/account/NewAccount.js","components/account/AccountSelector.js","components/account/ExtensionAccount.js","components/account/HardwalletAccount.js","components/account/SignerAccount.js","components/Error.js","pages/gift/claim/SelectAccount.js","components/OptionCard.js","pages/gift/AccountOptions.js","pages/gift/claim/SelectAccountSource.js","pages/gift/claim/ClaimMain.js","pages/gift/generate/GenerateGift.js","pages/gift/generate/PresentGift.js","components/account/ImportAccount.js","components/ParityQRSigner.js","pages/gift/generate/SelectAccountSource.js","pages/gift/generate/SelectAccount.js","pages/gift/generate/GenerateMain.js","pages/gift/Greeting.js","App.js","index.js"],"names":["configEnv","require","types","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","injectedExt","polkadapp","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","getChainAmount","chainDecimal","amount","bn10","BN","bnChainDecimal","bnChainUnit","pow","mul","toString","signAndSendTx","tx","signingAccount","cb","pairOrAddress","signer","signAsync","send","result","JSON","stringify","status","isInBlock","asInBlock","isFinalized","asFinalized","unsub","giftPallet","createGift","gift","to","chainAmount","registry","chainDecimals","claimGift","claim","by","removeGift","remove","DeveloperConsole","util","utilCrypto","QrSigner","setState","this","Promise","resolve","reject","isQrHashed","method","length","wrapper","createType","version","qrPayload","blake2AsU8a","toU8a","qrAddress","qrReject","qrResolve","Processing","show","message","Modal","centered","Body","style","height","className","Spinner","animation","role","CustomButton","onClick","Button","minWidth","variant","Claimed","Row","Col","Card","width","maxWidth","md","VerifySecret","claimGiftHandler","prevStep","ClaimContext","useState","redeemSecret","setRedeemSecret","onChange","e","target","NewAccount","setAccountHandler","mnemonic","mnemonicGenerate","account","createFromUri","createNewAccount","newAccount","_setAccountHandler","mnemonicWords","split","word","trim","index","Form","Check","label","AccounSelector","accounts","selectedAccount","setSelectedAccount","Dropdown","as","ButtonGroup","onSelect","eventKey","Toggle","id","size","Menu","idx","Item","active","ExtensionAccount","getPairs","HardwalletAccount","SignerAccount","showReader","setShowReader","externalAccount","setExternalAccount","onScan","scanned","scannedAccount","isAddress","addFromAddress","content","genesisHash","isExternal","onScanHandler","handleClose","onHide","Header","closeButton","Title","SelectAccount","jumpToStep","OptionCard","image","AccountOptions","options","xs","option","selectHandler","SelectAccountSource","nextStep","setAccountSource","optionSelectHandler","accountSource","sourceOptions","ClaimMain","currentStepComponent","step","setStep","setAccount","processing","setProcessing","processingError","setProcessingError","processingMsg","setProcessingMsg","resetPresentation","_setStep","handleError","claimGiftCallback","secret","alert","giftAccount","accountOption","NEW_ACCOUNT","EXTENSION_ACCOUNT","HARDWALLET_ACCOUNT","SIGNER_ACCOUNT","createElement","GenerateGift","generateGiftHandler","GenerateContext","setAmount","amountError","setAmountError","setName","nameError","setNameError","toUpperCase","Group","controlId","Label","Control","placeholder","color","validate","PresentGift","removeGiftHandler","textAlign","ImportAccount","accountSecret","setAccountSecret","importAccountFromSecret","ParityQRSigner","isHashed","onSignature","sigError","setSigError","_onSignature","useCallback","data","isHex","signature","sample","substr","cmd","GenerateMain","currentComponent","showSigner","setShowSigner","Uint8Array","setQrState","setGift","qrId","_addQrSignature","createGiftCallback","removeGiftCallback","getSigningAccount","QRSigner","isInjected","web3FromSource","injector","giftInfo","recipiantName","recipiantAccount","email","IMPORTED_ACCOUNT","Greeting","history","useHistory","push","Container","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5afe03f6.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\nconst types = require('./types.json');\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING',\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport * as polkadapp from '@polkadot/extension-dapp';\n\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null,\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', (err) => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      const injectedExt = await web3Enable(config.APP_NAME);\n      console.log(injectedExt);\n      window.polkadapp = polkadapp;\n      let allAccounts = await web3Accounts();\n      allAccounts.forEach((a) => console.log(a));\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: `${meta.name} (${meta.source})` },\n      }));\n      keyring.loadAll(\n        { isDevelopment: config.DEVELOPMENT_KEYRING },\n        allAccounts\n      );\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach((key) => {\n    initState[key] =\n      typeof props[key] === 'undefined' ? initState[key] : props[key];\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return (\n    <SubstrateContext.Provider value={state}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object,\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","import BN from 'bn.js';\n\nconst getChainAmount = (chainDecimal, amount) => {\n  const bn10 = new BN('10', 10);\n  const bnChainDecimal = new BN(chainDecimal, 10);\n  const bnChainUnit = bn10.pow(bnChainDecimal);\n  const bnAmount = new BN(amount, 10);\n  return bnAmount.mul(bnChainUnit).toString();\n};\n\nconst signAndSendTx = async (tx, signingAccount, cb) => {\n  const { pairOrAddress, signer } = signingAccount;\n  await tx.signAsync(pairOrAddress, { signer });\n  const unsub = await tx.send((result) => {\n    console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n    if (result.status.isInBlock) {\n      console.log(\n        `Transaction included at blockHash ${result.status.asInBlock}`\n      );\n      cb && cb({ result });\n    } else if (result.status.isFinalized) {\n      console.log(\n        `Transaction finalized at blockHash ${result.status.asFinalized}`\n      );\n      unsub();\n    }\n  });\n};\n\nconst createGift = async (api, signingAccount, gift, cb) => {\n  console.log(\n    `Sending a gift from ${signingAccount} to ${gift.to} of amount of ${gift.amount}`\n  );\n  try {\n    const chainAmount = getChainAmount(api.registry.chainDecimals, gift.amount);\n    const tx = api.tx.gift.gift(chainAmount, gift.to.address);\n    await signAndSendTx(tx, signingAccount, cb);\n  } catch (error) {\n    console.log(error);\n    cb && cb({ error });\n  }\n};\n\nconst claimGift = async (api, signingAccount, claim, cb) => {\n  console.log(\n    `Claiming the gift  ${signingAccount?.pairOrAddress?.address} to ${claim?.by?.address}`\n  );\n  try {\n    const tx = api.tx.gift.claim(claim.by.address);\n    await signAndSendTx(tx, signingAccount, cb);\n  } catch (error) {\n    cb && cb({ error });\n  }\n};\n\nconst removeGift = async (api, signingAccount, gift, cb) => {\n  console.log(`Removing the gift  ${gift.to} by ${signingAccount}`);\n  try {\n    const tx = api.tx.gift.remove(gift.to.address);\n    await signAndSendTx(tx, signingAccount, cb);\n  } catch (error) {\n    cb && cb({ error });\n  }\n};\nconst giftPallet = { createGift, claimGift, removeGift };\nexport default giftPallet;\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","// This QRSigner is ported from polkadot-JS\n// Original Code at: https://github.com/polkadot-js/apps/blob/bd78840d2142df121d182e8700b20308880dde0a/packages/react-signer/src/signers/QrSigner.ts\n\nimport { blake2AsU8a } from '@polkadot/util-crypto';\n\nexport default class QrSigner {\n  constructor(registry, setState) {\n    this.registry = registry;\n    this.setState = setState;\n  }\n\n  async signPayload(payload) {\n    return new Promise((resolve, reject) => {\n      // limit size of the transaction\n      const isQrHashed = payload.method.length > 5000;\n      const wrapper = this.registry.createType('ExtrinsicPayload', payload, {\n        version: payload.version,\n      });\n      const qrPayload = isQrHashed\n        ? blake2AsU8a(wrapper.toU8a(true))\n        : wrapper.toU8a();\n\n      this.setState({\n        isQrHashed,\n        qrAddress: payload.address,\n        qrPayload,\n        qrReject: reject,\n        qrResolve: resolve,\n      });\n    });\n  }\n}\n","import { Modal, Spinner, Row, Col } from 'react-bootstrap';\nexport default function Processing({ show, message }) {\n  return (\n    <>\n      <Modal show={show} centered>\n        <Modal.Body>\n          <div\n            style={{ height: '100px' }}\n            className=\"d-flex flex-column justify-content-around align-items-center\">\n            <div>{message}</div>\n            <div>\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Processing...</span>\n              </Spinner>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import { Button } from 'react-bootstrap';\nexport default function CustomButton({ children, onClick }) {\n  return (\n    <Button\n      style={{ minWidth: '100px' }}\n      variant=\"outline-dark\"\n      className=\"shadow-sm\"\n      onClick={onClick}>\n      {children}\n    </Button>\n  );\n}\n","import { Row, Col, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { Link } from 'react-router-dom';\n\nexport default function Claimed() {\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Link to=\"/\">\n          <Button>Home</Button>\n        </Link>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 800, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>\n              <Row className=\"justify-content-center align-items-center\">\n                <Col\n                  md=\"8\"\n                  style={{ height: 400 }}\n                  className=\"d-flex flex-column justify-content-center align-items-center\">\n                  <h1>Congradulations!!</h1>\n                  <h3> 🎉🥳🎊 🎁</h3>\n                  <p>\n                    Your gift has been claimed and tranferred to your account!\n                  </p>\n                  <p></p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { useContext, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { ClaimContext } from './ClaimMain';\nexport default function VerifySecret({ claimGiftHandler }) {\n  const { prevStep } = useContext(ClaimContext);\n  const [redeemSecret, setRedeemSecret] = useState('');\n  const redeemHandler = () => {\n    // ToDO: add better input validation to verify redeemSecret is not empty,\n    // and is indeed a valid mnemonic phrase\n    if (redeemSecret) {\n      claimGiftHandler(redeemSecret);\n    }\n  };\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Col>\n          <Button onClick={() => prevStep()}>{'< Back'}</Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 800, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>\n              <Row className=\"p-3 text-center\">\n                <Col>\n                  <h3>\n                    Enter the 12 words secret you have recieved to redeem your\n                    gift!\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-center align-items-center\">\n                <Col\n                  style={{ height: 200 }}\n                  className=\"d-flex flex-column justify-content-center align-items-center text-center\">\n                  <textarea\n                    className=\"w-50 h-75\"\n                    onChange={(e) => setRedeemSecret(e.target.value)}\n                    value={redeemSecret}\n                  />\n                </Col>\n                <div className=\"w-100\" />\n                <Col className=\"d-flex justify-content-end\">\n                  <Button onClick={() => redeemHandler()}>Redeem</Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport { useSubstrate } from '../../substrate-lib';\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\nimport Button from '../CustomButton';\n\nexport default function NewAccount({ setAccountHandler }) {\n  const label = 'I have stored my 12 words secret in a safe place.';\n  const { keyring } = useSubstrate();\n  const createNewAccount = () => {\n    const mnemonic = mnemonicGenerate();\n    const account = keyring.createFromUri(mnemonic, null, 'sr25519');\n    return { mnemonic, account };\n  };\n  const [newAccount, setNewAccount] = useState(createNewAccount());\n  const _setAccountHandler = async () => {\n    setAccountHandler(newAccount.account);\n  };\n  const mnemonicWords = newAccount?.mnemonic\n    ? newAccount.mnemonic.split(' ').map((word) => word.trim())\n    : [];\n  return (\n    <>\n      <Row className=\"pt-3 px-3\">\n        <Col>\n          <h3 className=\"text-center\">Your account is Ready!</h3>\n          <p>\n            Before we deposit your gift to your new account let’s store your\n            accont in a secure place be able to access your DOTs in future!\n          </p>\n        </Col>\n      </Row>\n      <Row className=\"p-3 justify-content-center align-items-center\">\n        <Row className=\"p-5\">\n          {mnemonicWords.map((word, index) => (\n            <Col md={4}>\n              <div className=\"border-bottom border-dark\">{`${word}`}</div>\n            </Col>\n          ))}\n        </Row>\n        <div className=\"w-100\" />\n        <Col>\n          <Form.Check type=\"checkbox\" label={label} />\n        </Col>\n        <div className=\"w-100\" />\n        <Col className=\"mt-3 d-flex justify-content-end\">\n          <Button onClick={() => _setAccountHandler()}>Next</Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { DropdownButton, Dropdown, Button, ButtonGroup } from 'react-bootstrap';\nexport default function AccounSelector({\n  accounts,\n  selectedAccount,\n  setSelectedAccount,\n}) {\n  const selectAccountHandler = (idx) => {\n    setSelectedAccount(accounts[idx]);\n  };\n\n  return (\n    <>\n      <Dropdown\n        className=\"w-100\"\n        as={ButtonGroup}\n        onSelect={(eventKey, e) => selectAccountHandler(eventKey)}>\n        <Dropdown.Toggle\n          variant=\"outline-dark\"\n          id=\"dropdown-item-button\"\n          className=\"w-100\"\n          size=\"lg\">\n          {selectedAccount\n            ? selectedAccount?.meta?.name || selectedAccount.address\n            : 'Select an account'}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {accounts.map((account, idx) => {\n            return (\n              <Dropdown.Item\n                eventKey={idx}\n                active={account.address === selectedAccount?.address}>\n                {account?.meta?.name || account.address}\n              </Dropdown.Item>\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport AccountSelector from './AccountSelector';\nimport Button from '../CustomButton';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function ExtensionAccount({ setAccountHandler }) {\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const { keyring } = useSubstrate();\n  const accounts = keyring.getPairs();\n  const _setAccountHandler = () => {\n    setAccountHandler(selectedAccount);\n  };\n  return (\n    <>\n      <Row className=\"p-3 text-center\">\n        <Col>\n          <h3>Select the account you want to use</h3>\n        </Col>\n      </Row>\n      <Row className=\"p-5 justify-content-center\">\n        <Col\n          style={{ height: 200 }}\n          className=\"d-flex flex-column justify-content-center align-items-center text-center\">\n          <AccountSelector\n            accounts={accounts}\n            selectedAccount={selectedAccount}\n            setSelectedAccount={setSelectedAccount}\n          />\n        </Col>\n        <div className=\"w-100\" />\n        <Col className=\"d-flex justify-content-end\">\n          <Button onClick={() => _setAccountHandler()}>Add</Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","export default function HardwalletAccount() {\n  return <div>Hardware Wallet Account</div>;\n}\n","import { QrScanAddress } from '@polkadot/react-qr';\nimport { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '../CustomButton';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function SignerAccount({ setAccountHandler }) {\n  // signer format\n  // substrate:13Q6RcqeAjvUCrYhdKdeqzUpHMJRishtxLByQn9YkyvMsYKa:0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3:test\n  const { keyring } = useSubstrate();\n  const [showReader, setShowReader] = useState('true');\n  const [externalAccount, setExternalAccount] = useState(null);\n  const onScanHandler = (scannedAccount) => {\n    if (scannedAccount.isAddress) {\n      const account = keyring.keyring.addFromAddress(\n        scannedAccount.content,\n        {\n          genesisHash: scannedAccount.genesisHash,\n          name: scannedAccount.name,\n          isExternal: true,\n        },\n        null\n      );\n      setExternalAccount(account);\n      setShowReader(false);\n    }\n  };\n\n  const onCancelHandler = () => {\n    setExternalAccount(null);\n    setShowReader(true);\n  };\n\n  const _setAccountHandler = () => {\n    // ToDO: validate account is not empty\n    setAccountHandler(externalAccount);\n  };\n  return (\n    <>\n      <Row className=\"p-3 text-center\">\n        <Col>\n          <h3>Scan your account QRCode from your signer app</h3>\n        </Col>\n      </Row>\n      {showReader ? (\n        <Row className=\"justify-content-center align-items-center\">\n          <Col md=\"6\" style={{ height: 400 }}>\n            <QrScanAddress onScan={(scanned) => onScanHandler(scanned)} />\n          </Col>\n        </Row>\n      ) : (\n        <Row className=\"justify-content-center align-items-center\">\n          <Col\n            style={{ height: 400 }}\n            className=\"d-flex flex-column justify-content-center align-items-center text-center\">\n            <h4>{externalAccount?.meta?.name} </h4>\n            <br />\n            <div>{externalAccount?.address}</div>\n          </Col>\n          <div className=\"w-100\" />\n          <Col md=\"6\" className=\"d-flex justify-content-between\">\n            <Button onClick={() => onCancelHandler()}>Cancel</Button>\n            <Button onClick={() => _setAccountHandler()}>Add</Button>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n}\n","import { Modal } from 'react-bootstrap';\nexport default function Error({ show, message, handleClose }) {\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Something went wrong</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{ height: '100px' }}\n            className=\"d-flex flex-column justify-content-around align-items-center\">\n            <div>{message}</div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import { useContext } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { ClaimContext } from './ClaimMain';\n\nexport default function SelectAccount({ children }) {\n  const { jumpToStep } = useContext(ClaimContext);\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Col>\n          <Button onClick={() => jumpToStep(0)}>{'< Back'}</Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 800, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>{children}</Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Card } from 'react-bootstrap';\nexport default function OptionCard({ image, children, onClick }) {\n  return (\n    <Card\n      style={{ width: '200px', height: '200px' }}\n      className=\"my-2 shadow\"\n      onClick={onClick}>\n      <Card.Body className=\"d-flex flex-column justify-content-center align-items-center text-center\">\n        {children}\n      </Card.Body>\n    </Card>\n  );\n}\n","import { Row, Col } from 'react-bootstrap';\nimport OptionCard from '../../components/OptionCard';\nexport default function AccountOptions({ options }) {\n  return (\n    <>\n      <Row\n        xs={1}\n        md={2}\n        className=\"mt-5 mx-auto justify-content-center align-items-center\">\n        {options.map((option) => (\n          <Col className=\"d-flex justify-content-center align-items-center\">\n            <OptionCard\n              onClick={() => {\n                option.selectHandler();\n              }}>\n              <h4>{option.label}</h4>\n            </OptionCard>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n","import { useContext } from 'react';\nimport AccountOptions from '../AccountOptions';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { Link } from 'react-router-dom';\nimport { ClaimContext } from './ClaimMain';\n\nexport default function SelectAccountSource() {\n  const { nextStep, setAccountSource } = useContext(ClaimContext);\n\n  const optionSelectHandler = (accountSource) => {\n    setAccountSource(accountSource);\n    nextStep();\n  };\n\n  const sourceOptions = [\n    {\n      selectHandler: () => optionSelectHandler('NEW_ACCOUNT'),\n      label: 'Create new Account',\n    },\n    {\n      selectHandler: () => optionSelectHandler('EXTENSION_ACCOUNT'),\n      label: 'Polkadot extension',\n    },\n    {\n      selectHandler: () => optionSelectHandler('HARDWALLET_ACCOUNT'),\n      label: 'Hardware Wallet',\n    },\n    {\n      selectHandler: () => optionSelectHandler('SIGNER_ACCOUNT'),\n      label: 'Parity Signer',\n    },\n  ];\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Col>\n          <Link to=\"/\">\n            <Button>{'< Back'}</Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row className=\"py-3\">\n        <Col className=\"text-center\">\n          <h1>Let’s deposit your gift to your Polkadot Account</h1>\n        </Col>\n      </Row>\n      <Row>\n        <AccountOptions options={sourceOptions} />\n      </Row>\n    </>\n  );\n}\n","import { createContext, useState, createElement } from 'react';\nimport Claimed from './Claimed';\nimport VerifySecret from './VerifySecret';\nimport NewAccount from '../../../components/account/NewAccount';\nimport ExtensionAccount from '../../../components/account/ExtensionAccount';\nimport HardwalletAccount from '../../../components/account/HardwalletAccount';\nimport SignerAccount from '../../../components/account/SignerAccount';\nimport ErrorModal from '../../../components/Error';\nimport Processing from '../../../components/Processing';\nimport SelectAccount from './SelectAccount';\nimport SelectAccountSource from './SelectAccountSource';\nimport { giftPallet, useSubstrate } from '../../../substrate-lib';\n\nconst ClaimContext = createContext();\n\nexport { ClaimContext };\nexport default function ClaimMain() {\n  const { keyring, apiState, api } = useSubstrate();\n  const { claimGift } = giftPallet;\n\n  const [step, setStep] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [accountSource, setAccountSource] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [processingError, setProcessingError] = useState(null);\n  const [processingMsg, setProcessingMsg] = useState('');\n\n  const resetPresentation = () => {\n    setProcessing(false);\n    setProcessingError(null);\n  };\n  const _setStep = (step) => {\n    resetPresentation();\n    setStep(step);\n  };\n  const nextStep = () => {\n    _setStep(step + 1);\n  };\n  const prevStep = () => {\n    _setStep(step - 1);\n  };\n  const jumpToStep = (step) => {\n    _setStep(step);\n  };\n\n  const handleError = (error) => {\n    setProcessing(false);\n    setProcessingMsg(null);\n    setProcessingError(error.message);\n  };\n\n  const claimGiftCallback = ({ error, result }) => {\n    if (error) {\n      handleError(error);\n    } else {\n      nextStep();\n    }\n  };\n\n  const claimGiftHandler = async (secret) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!account) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const giftAccount = keyring.createFromUri(\n        mnemonic,\n        { name: 'interim_gift' },\n        'sr25519'\n      );\n\n      // set the gift account as signing account\n      const signingAccount = { pairOrAddress: giftAccount };\n\n      // claim gift by the selected account\n      const claim = {\n        by: account,\n      };\n\n      claimGift(api, signingAccount, claim, claimGiftCallback);\n\n      setProcessingMsg('Transferring your gift to your account...');\n      setProcessing(true);\n    }\n  };\n\n  const setAccountHandler = (account) => {\n    if (account) {\n      setAccount(account);\n      nextStep();\n    } else {\n      handleError(\n        new Error('No account was selected, please login with your account!')\n      );\n    }\n  };\n\n  const accountOption = {\n    NEW_ACCOUNT: NewAccount,\n    EXTENSION_ACCOUNT: ExtensionAccount,\n    HARDWALLET_ACCOUNT: HardwalletAccount,\n    SIGNER_ACCOUNT: SignerAccount,\n  };\n\n  let currentStepComponent;\n  switch (step) {\n    case 1:\n      currentStepComponent = (\n        <SelectAccount>\n          {createElement(accountOption[accountSource], { setAccountHandler })}\n        </SelectAccount>\n      );\n      break;\n    case 2:\n      currentStepComponent = (\n        <VerifySecret claimGiftHandler={claimGiftHandler} />\n      );\n      break;\n    case 3:\n      currentStepComponent = <Claimed />;\n      break;\n    default:\n      currentStepComponent = <SelectAccountSource />;\n  }\n  return (\n    <ClaimContext.Provider\n      value={{\n        nextStep,\n        prevStep,\n        jumpToStep,\n        setAccountSource,\n      }}>\n      {currentStepComponent}\n      <ErrorModal\n        show={!!processingError}\n        message={processingError}\n        handleClose={() => resetPresentation()}\n      />\n      <Processing\n        show={!processingError && processing}\n        message={processingMsg}\n      />\n    </ClaimContext.Provider>\n  );\n}\n","import { useContext, useState } from 'react';\nimport { Row, Col, Form, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\n\nimport { GenerateContext } from './GenerateMain';\nexport default function GenerateGift({ account, generateGiftHandler }) {\n  const { jumpToStep } = useContext(GenerateContext);\n  const [amount, setAmount] = useState('');\n  const [amountError, setAmountError] = useState('');\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState('');\n\n  const validate = () => {\n    let error = false;\n    if (!name) {\n      error = true;\n      setNameError('Please enter a valid name');\n    }\n    if (!amount) {\n      error = true;\n      setAmountError('Please enter the gift value');\n    }\n    return !error;\n  };\n  return (\n    <>\n      <Row className=\"p-4 justify-content-between\">\n        <Col>\n          <Button onClick={() => jumpToStep(0)}>{'< Back'}</Button>\n        </Col>\n        <Col className=\"text-right\">\n          {account\n            ? account?.meta?.name\n              ? account?.meta?.name.toUpperCase()\n              : account.address\n            : 'No account'}\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 600, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>\n              <Row className=\"p-3 text-center\">\n                <Col>\n                  <h3>Generate a gift</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-center align-items-center\">\n                <Col\n                  style={{ height: 200 }}\n                  className=\"d-flex flex-column justify-content-center align-items-center\">\n                  <Form>\n                    <Form.Group as={Row} controlId=\"formGroupEmail\">\n                      <Form.Label>Gift value</Form.Label>\n                      <Form.Control\n                        type=\"number\"\n                        placeholder=\"10\"\n                        value={amount}\n                        onChange={(e) => {\n                          setAmountError('');\n                          setAmount(e.target.value);\n                        }}\n                      />\n                    </Form.Group>\n                    {amountError && (\n                      <Form.Label style={{ color: 'red' }}>\n                        <em>!{amountError}</em>\n                      </Form.Label>\n                    )}\n                    <Form.Group as={Row} controlId=\"formGroupEmail\">\n                      <Form.Label>To who</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Bob\"\n                        value={name}\n                        onChange={(e) => {\n                          setNameError('');\n                          setName(e.target.value);\n                        }}\n                      />\n                    </Form.Group>\n                    {nameError && (\n                      <Form.Label style={{ color: 'red' }}>\n                        <em>!{nameError}</em>\n                      </Form.Label>\n                    )}\n                  </Form>\n                </Col>\n                <div className=\"w-100\" />\n                <Col className=\"d-flex justify-content-end\">\n                  <Button\n                    onClick={() =>\n                      validate() && generateGiftHandler({ amount, name })\n                    }>\n                    Generate\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Row, Col, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { Link } from 'react-router-dom';\nexport default function PresentGift({ gift, removeGiftHandler }) {\n  const { name, amount, secret } = gift;\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Link to=\"/\">\n          <Button>Home</Button>\n        </Link>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 800, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>\n              <Row className=\"p-3 text-center\">\n                <Col>\n                  <h3>Let your firend know!</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-center align-items-center\">\n                <Col className=\"m-5 d-flex flex-column align-items-center\">\n                  <Card className=\"w-75\">\n                    <Card.Body>\n                      <p>\n                        Hey {name}! <br />\n                        I'm sending you {amount} dots as a gift! you can go here\n                        and type in the following secret message to claim your\n                        DOTs.\n                      </p>\n                      <p style={{ textAlign: 'center' }}>\n                        <strong>{secret} </strong>\n                      </p>\n                      <p>\n                        The website will walk you through to create your own\n                        secure Polkadot account. <br />\n                        Enjoy!\n                      </p>\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <div className=\"w-100\" />\n                <Col className=\"px-5 d-flex justify-content-around\">\n                  <Button>Print</Button>\n                  <Button>Email</Button>\n                  <Button onClick={() => removeGiftHandler(secret)}>\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { useSubstrate } from '../../substrate-lib';\nimport Button from '../../components/CustomButton';\nexport default function ImportAccount({ setAccountHandler }) {\n  const { keyring } = useSubstrate();\n  const [accountSecret, setAccountSecret] = useState('');\n  const importAccountFromSecret = async (accountSecret) => {\n    // ToDO: verify mnemonic secret is valid\n    // ToDO: add advanced option to load 'ed25519 and derived accounts\n    const account = await keyring.createFromUri(accountSecret, null, 'sr25519');\n    return account;\n  };\n  const _setAccountHandler = async () => {\n    // ToDO: add better input validation to verify accountSecret is not empty,\n    // and is indeed a valid mnemonic phrase\n    if (accountSecret) {\n      const account = await importAccountFromSecret(accountSecret);\n      setAccountHandler(account);\n    }\n  };\n  return (\n    <>\n      <Row className=\"p-3 text-center\">\n        <Col>\n          <h3>\n            Please enter your 12 words mnemonic phrase to import your account!\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col\n          style={{ height: 200 }}\n          className=\"d-flex flex-column justify-content-center align-items-center text-center\">\n          <textarea\n            className=\"w-50 h-75\"\n            onChange={(e) => setAccountSecret(e.target.value)}\n            value={accountSecret}\n          />\n        </Col>\n        <div className=\"w-100\" />\n        <Col className=\"d-flex justify-content-end\">\n          <Button onClick={() => _setAccountHandler()}>Import</Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useCallback, useState } from 'react';\n\nimport { QrDisplayPayload, QrScanSignature } from '@polkadot/react-qr';\nimport { isHex } from '@polkadot/util';\nimport { Spinner, Row, Col } from 'react-bootstrap';\n\nconst CMD_HASH = 1;\nconst CMD_MORTAL = 2;\n\nfunction ParityQRSigner({\n  address,\n  genesisHash,\n  isHashed,\n  onSignature,\n  payload,\n}) {\n  const [sigError, setSigError] = useState(null);\n\n  const _onSignature = useCallback(\n    (data) => {\n      if (isHex(data.signature)) {\n        onSignature(data);\n      } else {\n        const signature = data.signature;\n        const sample =\n          signature.length > 47\n            ? `${signature.substr(0, 24)}…${signature.substr(-22)}`\n            : signature;\n        setSigError(\n          `Non-signature, non-hex data received from QR. Data contains ${sample} instead of a hex-only signature. Please present the correct signature generated from the QR presented for submission.`\n        );\n      }\n    },\n    [onSignature]\n  );\n\n  if (!address) {\n    return (\n      <>\n        <Row>\n          <Col>{'Preparing QR for signing'}</Col>\n        </Row>\n        <Spinner animation=\"border\" />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Row>\n          <Col>\n            <div>\n              <QrDisplayPayload\n                address={address}\n                cmd={isHashed ? CMD_HASH : CMD_MORTAL}\n                genesisHash={genesisHash}\n                payload={payload}\n              />\n            </div>\n          </Col>\n          <Col>\n            <div>\n              <QrScanSignature onScan={_onSignature} />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>{sigError && <div>sigError</div>}</Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default ParityQRSigner;\n","import { useContext } from 'react';\nimport AccountOptions from '../AccountOptions';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { Link } from 'react-router-dom';\nimport { GenerateContext } from './GenerateMain';\n\nexport default function SelectAccountSource() {\n  const { nextStep, setAccountSource } = useContext(GenerateContext);\n\n  const optionSelectHandler = (accountSource) => {\n    setAccountSource(accountSource);\n    nextStep();\n  };\n\n  const sourceOptions = [\n    {\n      selectHandler: () => optionSelectHandler('IMPORTED_ACCOUNT'),\n      label: 'KeyStore or mnemonic phrase',\n    },\n    {\n      selectHandler: () => optionSelectHandler('EXTENSION_ACCOUNT'),\n      label: 'Polkadot extension',\n    },\n    {\n      selectHandler: () => optionSelectHandler('HARDWALLET_ACCOUNT'),\n      label: 'Hardware Wallet',\n    },\n    {\n      selectHandler: () => optionSelectHandler('SIGNER_ACCOUNT'),\n      label: 'Parity Signer',\n    },\n  ];\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Col>\n          <Link to=\"/\">\n            <Button>{'< Back'}</Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row className=\"py-3\">\n        <Col className=\"text-center\">\n          <h1>How would you like to access your account?</h1>\n        </Col>\n      </Row>\n      <Row>\n        <AccountOptions options={sourceOptions} />\n      </Row>\n    </>\n  );\n}\n","import { useContext } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Button from '../../../components/CustomButton';\nimport { GenerateContext } from './GenerateMain';\n\nexport default function SelectAccount({ children }) {\n  const { jumpToStep } = useContext(GenerateContext);\n  return (\n    <>\n      <Row className=\"p-4\">\n        <Col>\n          <Button onClick={() => jumpToStep(0)}>{'< Back'}</Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center align-items-center\">\n        <Col className=\"d-flex justify-content-center align-items-center\">\n          <Card style={{ width: 800, maxWidth: '100%' }} className=\"shadow\">\n            <Card.Body>{children}</Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { createContext, useState, useCallback, createElement } from 'react';\nimport GenerateGift from './GenerateGift';\nimport PresentGift from './PresentGift';\nimport ImportAccount from '../../../components/account/ImportAccount';\nimport ExtensionAccount from '../../../components/account/ExtensionAccount';\nimport HardwalletAccount from '../../../components/account/HardwalletAccount';\nimport SignerAccount from '../../../components/account/SignerAccount';\nimport Processing from '../../../components/Processing';\nimport ErrorModal from '../../../components/Error';\nimport { useSubstrate, giftPallet } from '../../../substrate-lib';\nimport { QRSigner } from '../../../substrate-lib/components';\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\nimport ParityQRSigner from '../../../components/ParityQRSigner';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport SelectAccountSource from './SelectAccountSource';\nimport SelectAccount from './SelectAccount';\n\nconst GenerateContext = createContext();\nexport { GenerateContext };\n\nexport default function GenerateMain() {\n  const { apiState, api, keyring } = useSubstrate();\n  const { removeGift, createGift } = giftPallet;\n\n  const [step, setStep] = useState(0);\n  const [account, setAccount] = useState(null);\n  const [accountSource, setAccountSource] = useState(null);\n  const [showSigner, setShowSigner] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [processingError, setProcessingError] = useState(null);\n  const [processingMsg, setProcessingMsg] = useState('');\n\n  const [\n    { isQrHashed, qrAddress, qrPayload, qrResolve },\n    setQrState,\n  ] = useState({\n    isQrHashed: false,\n    qrAddress: '',\n    qrPayload: new Uint8Array(),\n  });\n\n  const [gift, setGift] = useState(null);\n\n  const resetPresentation = () => {\n    setProcessing(false);\n    setShowSigner(false);\n    setProcessingError(null);\n    setProcessingMsg('');\n  };\n  const _setStep = (step) => {\n    resetPresentation();\n    setStep(step);\n  };\n  const nextStep = () => {\n    _setStep(step + 1);\n  };\n  const prevStep = () => {\n    _setStep(step - 1);\n  };\n  const jumpToStep = (step) => {\n    _setStep(step);\n  };\n\n  let qrId = 0;\n  const _addQrSignature = useCallback(\n    ({ signature }) => {\n      qrResolve &&\n        qrResolve({\n          id: ++qrId,\n          signature,\n        });\n      setShowSigner(false);\n      setProcessing(true);\n    },\n    [qrResolve]\n  );\n\n  const handleError = (error) => {\n    setProcessing(false);\n    setProcessingMsg(null);\n    setProcessingError(error.message);\n  };\n\n  const createGiftCallback = ({ error, result }) => {\n    if (error) {\n      handleError(error);\n    } else {\n      nextStep();\n    }\n  };\n\n  const removeGiftCallback = ({ error, result }) => {\n    if (error) {\n      handleError(error);\n    } else {\n      jumpToStep(2);\n    }\n  };\n\n  const getSigningAccount = async (account) => {\n    let pairOrAddress = account;\n    let signer = null;\n    if (account?.meta?.isExternal) {\n      // it is an external account / needs QRSigner\n      pairOrAddress = account.address;\n      signer = new QRSigner(api.registry, setQrState);\n    } else if (account?.meta?.isInjected) {\n      pairOrAddress = account.address;\n      const injector = await web3FromSource(account.meta.source);\n      signer = injector?.signer;\n    }\n    return { pairOrAddress, signer };\n  };\n\n  const generateGiftHandler = async (giftInfo) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!account) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // load signing account\n      const signingAccount = await getSigningAccount(account);\n\n      // generate mnemonic and interim recipiant account\n      const mnemonic = mnemonicGenerate();\n      const recipiantName = giftInfo.name;\n      const recipiantAccount = keyring.createFromUri(\n        mnemonic,\n        { name: recipiantName },\n        'sr25519'\n      );\n      const gift = {\n        to: recipiantAccount,\n        amount: giftInfo.amount,\n      };\n\n      createGift(api, signingAccount, gift, createGiftCallback);\n\n      setGift({\n        secret: mnemonic,\n        name: giftInfo.name || '',\n        email: giftInfo.email || '',\n        amount: giftInfo.amount,\n      });\n\n      // ToDO: make it sync by showing a spinner while the gift is being registered on chain before moving to the next step!\n      if (account?.meta?.isExternal) {\n        setShowSigner(true);\n      } else {\n        setProcessingMsg('Generating the gift on the blockchain...');\n        setProcessing(true);\n      }\n    }\n  };\n\n  const removeGiftHandler = async (secret) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!account) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // load signing account\n      const signingAccount = await getSigningAccount(account);\n\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const giftAccount = keyring.createFromUri(\n        mnemonic,\n        { name: 'interim_gift' },\n        'sr25519'\n      );\n\n      const gift = {\n        to: giftAccount,\n      };\n\n      removeGift(api, signingAccount, gift, removeGiftCallback);\n\n      if (account?.meta?.isExternal) {\n        setShowSigner(true);\n      } else {\n        // go to generate gift\n        setProcessingMsg('Removing the gift from the blockchain...');\n        setProcessing(true);\n      }\n    }\n  };\n\n  const setAccountHandler = (account) => {\n    if (account) {\n      setAccount(account);\n      nextStep();\n    } else {\n      handleError(\n        new Error('No account was selected, please login with your account!')\n      );\n    }\n  };\n\n  const accountOption = {\n    IMPORTED_ACCOUNT: ImportAccount,\n    EXTENSION_ACCOUNT: ExtensionAccount,\n    HARDWALLET_ACCOUNT: HardwalletAccount,\n    SIGNER_ACCOUNT: SignerAccount,\n  };\n\n  let currentStepComponent;\n  switch (step) {\n    case 1:\n      currentStepComponent = (\n        <SelectAccount>\n          {createElement(accountOption[accountSource], { setAccountHandler })}\n        </SelectAccount>\n      );\n      break;\n    case 2:\n      currentStepComponent = (\n        <GenerateGift\n          account={account}\n          generateGiftHandler={generateGiftHandler}\n        />\n      );\n      break;\n    case 3:\n      currentStepComponent = (\n        <PresentGift gift={gift} removeGiftHandler={removeGiftHandler} />\n      );\n      break;\n    default:\n      currentStepComponent = <SelectAccountSource />;\n  }\n  let currentComponent;\n  if (showSigner) {\n    currentComponent = (\n      <ParityQRSigner\n        address={qrAddress}\n        genesisHash={api.genesisHash}\n        isHashed={isQrHashed}\n        onSignature={_addQrSignature}\n        payload={qrPayload}\n      />\n    );\n  } else {\n    currentComponent = currentStepComponent;\n  }\n  return (\n    <GenerateContext.Provider\n      value={{\n        nextStep,\n        prevStep,\n        jumpToStep,\n        setAccountSource,\n      }}>\n      {currentComponent}\n      <ErrorModal\n        show={!!processingError}\n        message={processingError}\n        handleClose={() => resetPresentation()}\n      />\n      <Processing\n        show={!processingError && processing}\n        message={processingMsg}\n      />\n    </GenerateContext.Provider>\n  );\n}\n","import { Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport OptionCard from '../../components/OptionCard';\n\nexport default function Greeting() {\n  // rail manage seek lobster sad wrap symbol clever type math town cool\n  // gift =>\n  const history = useHistory();\n  return (\n    <>\n      <Row className=\"mt-5 py-5\">\n        <Col className=\"text-center\">\n          <h1>There are no gifts better than some DOTs!</h1>\n        </Col>\n      </Row>\n      <Row\n        xs={1}\n        md={2}\n        className=\"mt-5 mx-auto justify-content-center align-items-center\">\n        <Col\n          xs={12}\n          md={6}\n          className=\"d-flex justify-content-center align-items-center\">\n          <OptionCard onClick={() => history.push('/claim')}>\n            <h3>Claim</h3>\n            <span>your gift</span>\n          </OptionCard>\n        </Col>\n        <Col\n          xs={12}\n          md={6}\n          className=\"d-flex justify-content-center align-items-center\">\n          <OptionCard onClick={() => history.push('/generate')}>\n            <h3>Generate</h3>\n            <span>a new gift</span>\n          </OptionCard>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Container } from 'react-bootstrap';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\nimport Processing from './components/Processing';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch,\n} from 'react-router-dom';\nimport ClaimMain from './pages/gift/claim/ClaimMain';\nimport GenerateMain from './pages/gift/generate/GenerateMain';\nimport Greeting from './pages/gift/Greeting';\n\nfunction Body() {\n  const { apiState } = useSubstrate();\n  return (\n    <Container>\n      <Router>\n        <Switch>\n          <Route path={'/claim'}>\n            <ClaimMain />\n          </Route>\n          <Route path={'/generate'}>\n            <GenerateMain />\n          </Route>\n          <Route exact path={'/'}>\n            <Greeting />\n          </Route>\n          <Route path={'/'}>\n            <Redirect to={'/'} />\n          </Route>\n        </Switch>\n        <Processing\n          show={apiState !== 'READY'}\n          message=\"Connecting to the blockchain network...\"\n        />\n      </Router>\n    </Container>\n  );\n}\n\nexport default function App() {\n  return (\n    <SubstrateContextProvider>\n      <Body />\n      <DeveloperConsole />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
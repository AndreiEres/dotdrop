{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","Accounts.js","PageHeader.js","pages/first.js","pages/second.js","substrate-lib/components/DeveloperConsole.js","App.js","index.js"],"names":["configEnv","require","types","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","Accounts","setAccountAddress","useState","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","length","useEffect","Box","Select","options","valueKey","labelKey","option","index","onChange","size","AccountSelector","query","PageHeader","loginHandler","Header","height","width","Image","src","direction","gap","Avatar","background","UserAdmin","First","generateGiftHandler","claimGiftHandler","amount","setAmount","setName","secret","setSecret","ResponsiveContext","align","Main","Heading","level","textAlign","Card","CardBody","pad","justify","Text","TextInput","placeholder","e","amountChangeHandler","target","Button","primary","label","margin","top","alignSelf","onClick","email","bottom","TextArea","fill","Second","removeGiftHandler","border","href","as","DeveloperConsole","util","utilCrypto","Body","giftInfo","setGiftInfo","showGift","setShowGift","loginAccount","setLoginAccount","createGift","from","to","tx","gift","signAndSend","result","JSON","stringify","status","isInBlock","asInBlock","isFinalized","asFinalized","unsub","claimGift","giftAccount","toAccount","claim","removeGift","fromAccount","remove","getPair","senderAccount","mnemonic","mnemonicGenerate","recipiantName","addUri","pair","Grommet","theme","grommet","ThemeContext","Extend","global","colors","brand","Layer","onEsc","onClickOutside","animate","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.859da332.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\nconst types = require('./types.json');\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null,\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', (err) => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: `${meta.name} (${meta.source})` },\n      }));\n      keyring.loadAll(\n        { isDevelopment: config.DEVELOPMENT_KEYRING },\n        allAccounts\n      );\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach((key) => {\n    initState[key] =\n      typeof props[key] === 'undefined' ? initState[key] : props[key];\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return (\n    <SubstrateContext.Provider value={state}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object,\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","import { useState, useEffect } from 'react';\nimport { Select, Box } from 'grommet';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Accounts({ setAccountAddress }) {\n  const { keyring } = useSubstrate();\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map((account) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user',\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress && setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const setAccount = (address) => {\n    setAccountAddress && setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Box>\n      <Select\n        options={keyringOptions}\n        value={accountSelected}\n        valueKey={{ key: 'value', reduce: true }}\n        labelKey=\"text\"\n        children={(option, index, options, state) => <Box>{option.text}</Box>}\n        onChange={({ value }) => setAccount(value)}\n        size=\"small\"\n      />\n    </Box>\n  );\n}\n\nexport default function AccountSelector(props) {\n  const { api, keyring } = useSubstrate();\n  return keyring?.getPairs && api?.query ? <Accounts {...props} /> : null;\n}\n","import { Header, Box, Avatar, Image } from 'grommet';\nimport { UserAdmin } from 'grommet-icons';\nimport AccountSelector from './Accounts';\n\nexport default function PageHeader({ loginHandler }) {\n  return (\n    <Header>\n      <Box height=\"5rem\" width=\"5rem\">\n        <Image\n          src={`${process.env.PUBLIC_URL}/assets/Polkadot_symbol_color.png`}\n        />\n      </Box>\n      <Box direction=\"row\" gap=\"small\">\n        <Avatar background=\"brand\">\n          <UserAdmin />\n        </Avatar>\n        <AccountSelector setAccountAddress={loginHandler} />\n      </Box>\n    </Header>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport {\n  Box,\n  Header,\n  Heading,\n  Form,\n  Text,\n  TextInput,\n  Button,\n  Main,\n  Card,\n  CardBody,\n  TextArea,\n  Image,\n  ResponsiveContext,\n} from 'grommet';\n\nexport default function First({ generateGiftHandler, claimGiftHandler }) {\n  const [amount, setAmount] = useState('');\n  const [name, setName] = useState('');\n  const [secret, setSecret] = useState('');\n  const amountChangeHandler = (amount) => {\n    // toDO: validate the input is valid and in the range\n    setAmount(amount);\n  };\n  const size = React.useContext(ResponsiveContext);\n  return (\n    <Box align=\"center\">\n      <Main align=\"center\" height=\"100%\">\n        <Heading level=\"1\">Dots are Awesome!</Heading>\n        <Box align=\"center\">\n          <Heading level=\"3\" textAlign=\"center\">\n            Send some gifts to your friends and family and have them join\n            polkadot network!\n          </Heading>\n          <Card background=\"light-1\">\n            <CardBody pad=\"medium\" direction=\"row\" gap=\"medium\">\n              {size != 'small' ? (\n                <Card height=\"small\" width=\"medium\" justify=\"center\">\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/Polkadot_Logotype_color.png`}\n                    width=\"100%\"\n                  />\n                </Card>\n              ) : null}\n              <Box width={size == 'small' ? '100%' : '60%'}>\n                <Box>\n                  <Text>Gift value:</Text>\n                  <TextInput\n                    placeholder=\"10\"\n                    value={amount}\n                    onChange={(e) => {\n                      amountChangeHandler(e.target.value);\n                    }}\n                  />\n                </Box>\n                <Box>\n                  <Text>To who:</Text>\n                  <TextInput\n                    placeholder=\"Bob\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Box>\n                <Button\n                  primary\n                  label=\"Generate\"\n                  margin={{ top: 'xsmall' }}\n                  alignSelf=\"end\"\n                  onClick={() => {\n                    generateGiftHandler({ amount, name, email: '' });\n                  }}\n                />\n              </Box>\n            </CardBody>\n          </Card>\n        </Box>\n        <Box>\n          <Heading level=\"3\" textAlign=\"center\">\n            Claim your gifts that you've recieved!\n          </Heading>\n          <Box margin={{ bottom: '10px' }}>\n            <TextArea\n              fill\n              value={secret}\n              onChange={(e) => setSecret(e.target.value)}\n            />\n          </Box>\n          <Button\n            label=\"Redeem\"\n            size=\"large\"\n            onClick={() => {\n              setSecret('');\n              claimGiftHandler(secret);\n            }}\n          />\n        </Box>\n      </Main>\n    </Box>\n  );\n}\n","import {\n  Box,\n  Main,\n  Heading,\n  Text,\n  Card,\n  CardBody,\n  CardFooter,\n  Button,\n} from 'grommet';\n\nexport default function Second({\n  name,\n  email,\n  amount,\n  secret,\n  removeGiftHandler,\n}) {\n  return (\n    <Box align=\"center\">\n      <Main fill align=\"center\" pad=\"large\">\n        <Heading>Let your friend know</Heading>\n        <Box align=\"center\">\n          <Card border=\"all\" margin={{ bottom: '10px' }}>\n            <CardBody pad=\"medium\">\n              <pre>\n                Hey {name}!\n                <br />\n                I'm sending you {amount} dots as a gift!\n                <br />\n                you can go to <a href=\"#\">here</a> to claim your gift, and type\n                in the following secret message to claim your DOTs.\n                <br />\n                <h4>{secret}</h4>\n                The website will walk you through to create your own secure\n                Polkadot account\n                <br />\n                <br />\n                Enjoy!\n              </pre>\n            </CardBody>\n          </Card>\n          <Box direction=\"row\" fill justify=\"evenly\">\n            <Button label=\"Print\" />\n            <Button label=\"Email\" as=\"a\" href={`mailto:${email}`} />\n            <Button label=\"Remove\" onClick={() => removeGiftHandler(secret)} />\n          </Box>\n        </Box>\n      </Main>\n    </Box>\n  );\n}\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import { React, useState, useEffect } from 'react';\nimport { Grommet, ThemeContext, grommet, Box, Layer } from 'grommet';\nimport PageHeader from './PageHeader';\nimport First from './pages/first';\nimport Second from './pages/second';\n\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nconst ChainMeta = () => {\n  const { api, apiState, keyring, keyringState, apiError } = useSubstrate();\n  if (apiState === 'ERROR') return <div>apiError</div>;\n  else if (apiState !== 'READY') return <div>\"Connecting to Substrate\"</div>;\n\n  if (keyringState !== 'READY') {\n    return (\n      <div>\n        \"Loading accounts (please review any extension's authorization)\"\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <pre>\n          {JSON.stringify(api.runtimeMetadata.asLatest.toHuman(), null, 2)}\n        </pre>\n      </p>\n      <DeveloperConsole />\n    </div>\n  );\n};\n\nfunction Body() {\n  const { api, apiState, keyring, keyringState, apiError } = useSubstrate();\n  const [giftInfo, setGiftInfo] = useState(null);\n  const [showGift, setShowGift] = useState(false);\n  const [loginAccount, setLoginAccount] = useState('');\n\n  const createGift = async ({ from, to, amount }) => {\n    console.log(\n      `Sending a gift from ${from.address} to ${to.address} of amount of ${amount}`\n    );\n    const unsub = await api.tx.gift\n      .gift(amount, to.address)\n      .signAndSend(from, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const claimGift = async ({ giftAccount, toAccount }) => {\n    console.log(\n      `Claiming the gift  ${giftAccount.address} to ${toAccount.address}`\n    );\n    const unsub = await api.tx.gift\n      .claim(toAccount.address)\n      .signAndSend(giftAccount, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const removeGift = async ({ fromAccount, giftAccount }) => {\n    console.log(\n      `Removing the gift  ${giftAccount.address} by ${fromAccount.address}`\n    );\n    const unsub = await api.tx.gift\n      .remove(giftAccount.address)\n      .signAndSend(fromAccount, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const generateGiftHandler = async (giftInfo) => {\n    if (!loginAccount) {\n      console.log('no account is selected');\n    } else if (apiState === 'READY') {\n      // load sender account\n      const senderAccount = await keyring.getPair(loginAccount);\n\n      // generate mnemonic and interim recipiant account\n      const mnemonic = mnemonicGenerate();\n      const recipiantName = giftInfo.name;\n      const { pair } = keyring.addUri(\n        mnemonic,\n        null,\n        { name: recipiantName },\n        'ed25519'\n      );\n      const recipiantAccount = pair;\n      const gift = {\n        from: senderAccount,\n        to: recipiantAccount,\n        amount: giftInfo.amount,\n      };\n\n      createGift(gift);\n\n      setGiftInfo({\n        secret: mnemonic,\n        name: giftInfo.name || '',\n        email: giftInfo.email || '',\n        amount: giftInfo.amount,\n      });\n      setShowGift(true);\n    } else {\n      console.log('api not READY!' + apiState);\n    }\n  };\n\n  const claimGiftHandler = async (secret) => {\n    if (!loginAccount) {\n      console.log('no account is selected');\n    } else if (apiState === 'READY') {\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const { pair } = keyring.addUri(\n        mnemonic,\n        null,\n        { name: 'gift' },\n        'ed25519'\n      );\n      const giftAccount = pair;\n\n      // load login account to transfer the gift to\n      const toAccount = await keyring.getPair(loginAccount);\n\n      const claim = {\n        giftAccount,\n        toAccount,\n      };\n      claimGift(claim);\n    } else {\n      console.log('api not READY!' + apiState);\n    }\n  };\n\n  const removeGiftHandler = async (secret) => {\n    if (!loginAccount) {\n      console.log('no account is selected');\n    } else if (apiState === 'READY') {\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const { pair } = keyring.addUri(\n        mnemonic,\n        null,\n        { name: 'gift' },\n        'ed25519'\n      );\n      const giftAccount = pair;\n\n      // load sender account\n      const fromAccount = await keyring.getPair(loginAccount);\n\n      const gift = {\n        giftAccount,\n        fromAccount,\n      };\n      removeGift(gift);\n\n      setShowGift(false);\n    } else {\n      console.log('api not READY!' + apiState);\n    }\n  };\n\n  function loginHandler(accountAddr) {\n    setLoginAccount({ addr: accountAddr });\n  }\n\n  return (\n    <div>\n      <Grommet theme={grommet}>\n        <ThemeContext.Extend\n          value={{ global: { colors: { brand: '#e6007a' } } }}>\n          <Box>\n            <PageHeader loginHandler={setLoginAccount} />\n            {!showGift && (\n              <First\n                generateGiftHandler={generateGiftHandler}\n                claimGiftHandler={claimGiftHandler}\n              />\n            )}\n            {showGift && (\n              <Layer\n                onEsc={() => setShowGift(false)}\n                onClickOutside={() => setShowGift(false)}\n                animate=\"false\">\n                <Second {...giftInfo} removeGiftHandler={removeGiftHandler} />\n              </Layer>\n            )}\n          </Box>\n        </ThemeContext.Extend>\n      </Grommet>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <SubstrateContextProvider>\n      <Body />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
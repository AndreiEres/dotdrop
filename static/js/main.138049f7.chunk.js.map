{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","Accounts.js","PageHeader.js","pages/first.js","pages/second.js","substrate-lib/components/DeveloperConsole.js","App.js","index.js"],"names":["configEnv","require","types","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","Accounts","setAccountAddress","useState","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","length","useEffect","Box","Select","options","valueKey","labelKey","option","index","onChange","size","AccountSelector","query","PageHeader","loginHandler","Header","height","Image","src","direction","gap","Avatar","background","UserAdmin","First","generateGiftHandler","claimGiftHandler","amount","setAmount","setName","secret","setSecret","ResponsiveContext","align","Main","Heading","level","textAlign","Card","CardBody","pad","width","justify","Text","TextInput","placeholder","e","amountChangeHandler","target","Button","primary","label","margin","top","alignSelf","onClick","email","bottom","TextArea","fill","Second","removeGiftHandler","closeHandler","border","overflow","Anchor","as","href","DeveloperConsole","util","utilCrypto","unitConst","BN","Body","giftInfo","setGiftInfo","showGift","setShowGift","loginAccount","setLoginAccount","createGift","from","to","bnAmount","chainAmount","mul","tx","gift","toString","signAndSend","result","JSON","stringify","status","isInBlock","asInBlock","isFinalized","asFinalized","unsub","claimGift","giftAccount","toAccount","claim","removeGift","fromAccount","remove","alert","getPair","senderAccount","mnemonic","mnemonicGenerate","recipiantName","recipiantAccount","createFromUri","Grommet","theme","grommet","ThemeContext","Extend","global","colors","brand","Layer","onEsc","onClickOutside","animate","FormClose","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.138049f7.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\nconst types = require('./types.json');\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING',\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null,\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', (err) => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: `${meta.name} (${meta.source})` },\n      }));\n      keyring.loadAll(\n        { isDevelopment: config.DEVELOPMENT_KEYRING },\n        allAccounts\n      );\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach((key) => {\n    initState[key] =\n      typeof props[key] === 'undefined' ? initState[key] : props[key];\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return (\n    <SubstrateContext.Provider value={state}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object,\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","import { useState, useEffect } from 'react';\nimport { Select, Box } from 'grommet';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Accounts({ setAccountAddress }) {\n  const { keyring } = useSubstrate();\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map((account) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user',\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress && setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const setAccount = (address) => {\n    setAccountAddress && setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Box>\n      <Select\n        options={keyringOptions}\n        value={accountSelected}\n        valueKey={{ key: 'value', reduce: true }}\n        labelKey=\"text\"\n        children={(option, index, options, state) => <Box>{option.text}</Box>}\n        onChange={({ value }) => setAccount(value)}\n        size=\"small\"\n      />\n    </Box>\n  );\n}\n\nexport default function AccountSelector(props) {\n  const { api, keyring } = useSubstrate();\n  return keyring?.getPairs && api?.query ? <Accounts {...props} /> : null;\n}\n","import { Header, Box, Avatar, Image } from 'grommet';\nimport { UserAdmin } from 'grommet-icons';\nimport AccountSelector from './Accounts';\n\nexport default function PageHeader({ loginHandler }) {\n  return (\n    <Header height=\"6rem\">\n      <Box height=\"100%\">\n        <Image\n          height=\"100%\"\n          src={`${process.env.PUBLIC_URL}/assets/Polkadot_symbol_color.png`}\n        />\n      </Box>\n      <Box direction=\"row\" gap=\"small\">\n        <Avatar background=\"brand\">\n          <UserAdmin />\n        </Avatar>\n        <AccountSelector setAccountAddress={loginHandler} />\n      </Box>\n    </Header>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport {\n  Box,\n  Header,\n  Heading,\n  Form,\n  Text,\n  TextInput,\n  Button,\n  Main,\n  Card,\n  CardBody,\n  TextArea,\n  Image,\n  ResponsiveContext,\n} from 'grommet';\n\nexport default function First({ generateGiftHandler, claimGiftHandler }) {\n  const [amount, setAmount] = useState('');\n  const [name, setName] = useState('');\n  const [secret, setSecret] = useState('');\n  const amountChangeHandler = (amount) => {\n    // toDO: validate the input is valid and in the range\n    setAmount(amount);\n  };\n  const size = React.useContext(ResponsiveContext);\n  return (\n    <Box align=\"center\">\n      <Main align=\"center\" height=\"100%\">\n        <Heading level=\"1\">Dots are Awesome!</Heading>\n        <Box align=\"center\">\n          <Heading level=\"3\" textAlign=\"center\">\n            Send some DOTs to your friends and family and have them join\n            polkadot network!\n          </Heading>\n          <Card background=\"light-1\">\n            <CardBody pad=\"medium\" direction=\"row\" gap=\"medium\">\n              {size != 'small' ? (\n                <Card height=\"small\" width=\"medium\" justify=\"center\">\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/Polkadot_Logotype_color.png`}\n                    width=\"100%\"\n                  />\n                </Card>\n              ) : null}\n              <Box width={size == 'small' ? '100%' : '60%'}>\n                <Box>\n                  <Text>Gift value:</Text>\n                  <TextInput\n                    placeholder=\"10\"\n                    value={amount}\n                    onChange={(e) => {\n                      amountChangeHandler(e.target.value);\n                    }}\n                  />\n                </Box>\n                <Box>\n                  <Text>To who:</Text>\n                  <TextInput\n                    placeholder=\"Bob\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Box>\n                <Button\n                  primary\n                  label=\"Generate\"\n                  margin={{ top: 'xsmall' }}\n                  alignSelf=\"end\"\n                  onClick={() => {\n                    generateGiftHandler({ amount, name, email: '' });\n                  }}\n                />\n              </Box>\n            </CardBody>\n          </Card>\n        </Box>\n        <Box>\n          <Heading level=\"3\" textAlign=\"center\">\n            Enter the 12 words secret below to claim the gifts!\n          </Heading>\n          <Box margin={{ bottom: '10px' }}>\n            <TextArea\n              fill\n              value={secret}\n              onChange={(e) => setSecret(e.target.value)}\n            />\n          </Box>\n          <Button\n            label=\"Redeem\"\n            size=\"large\"\n            onClick={() => {\n              setSecret('');\n              claimGiftHandler(secret);\n            }}\n          />\n        </Box>\n      </Main>\n    </Box>\n  );\n}\n","import { Box, Heading, Card, CardBody, Button, Anchor } from 'grommet';\n\nexport default function Second({\n  name,\n  email,\n  amount,\n  secret,\n  removeGiftHandler,\n  closeHandler,\n}) {\n  return (\n    <Box pad=\"medium\" align=\"center\">\n      <Heading>Let your friend know!</Heading>\n      <Box align=\"center\">\n        <Card border=\"all\" margin={{ bottom: '10px' }}>\n          <CardBody pad=\"medium\" overflow=\"scroll\">\n            <p>\n              Hey {name}!\n              <br />\n              I'm sending you {amount} dots as a gift!\n              <br />\n              you can go <Anchor\n                onClick={() => closeHandler()}\n                label=\"here\"\n              />{' '}\n              and type in the following secret message to claim your DOTs.\n              <br />\n              <h4>{secret}</h4>\n              The website will walk you through to create your own secure\n              Polkadot account\n              <br />\n              <br />\n              Enjoy!\n            </p>\n          </CardBody>\n        </Card>\n        <Box direction=\"row\" fill justify=\"evenly\">\n          <Button label=\"Print\" />\n          <Button label=\"Email\" as=\"a\" href={`mailto:${email}`} />\n          <Button label=\"Remove\" onClick={() => removeGiftHandler(secret)} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import { React, useState, useEffect } from 'react';\nimport {\n  Grommet,\n  ThemeContext,\n  grommet,\n  Box,\n  Layer,\n  Card,\n  CardBody,\n  CardHeader,\n} from 'grommet';\nimport PageHeader from './PageHeader';\nimport First from './pages/first';\nimport Second from './pages/second';\n\nimport { mnemonicGenerate } from '@polkadot/util-crypto';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\nimport BN from 'bn.js';\n\nimport { FormClose } from 'grommet-icons';\n\nconst unitConst = new BN('1000000000000', 10);\nconst ChainMeta = () => {\n  const { api, apiState, keyring, keyringState, apiError } = useSubstrate();\n  if (apiState === 'ERROR') return <div>apiError</div>;\n  else if (apiState !== 'READY') return <div>\"Connecting to Substrate\"</div>;\n\n  if (keyringState !== 'READY') {\n    return (\n      <div>\n        \"Loading accounts (please review any extension's authorization)\"\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <pre>\n          {JSON.stringify(api.runtimeMetadata.asLatest.toHuman(), null, 2)}\n        </pre>\n      </p>\n      <DeveloperConsole />\n    </div>\n  );\n};\n\nfunction Body() {\n  const { api, apiState, keyring, keyringState, apiError } = useSubstrate();\n  const [giftInfo, setGiftInfo] = useState(null);\n  const [showGift, setShowGift] = useState(false);\n  const [loginAccount, setLoginAccount] = useState('');\n\n  const createGift = async ({ from, to, amount }) => {\n    console.log(\n      `Sending a gift from ${from.address} to ${to.address} of amount of ${amount}`\n    );\n    const bnAmount = new BN(amount, 10);\n    const chainAmount = bnAmount.mul(unitConst);\n    const unsub = await api.tx.gift\n      .gift(chainAmount.toString(), to.address)\n      .signAndSend(from, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const claimGift = async ({ giftAccount, toAccount }) => {\n    console.log(\n      `Claiming the gift  ${giftAccount.address} to ${toAccount.address}`\n    );\n    const unsub = await api.tx.gift\n      .claim(toAccount.address)\n      .signAndSend(giftAccount, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const removeGift = async ({ fromAccount, giftAccount }) => {\n    console.log(\n      `Removing the gift  ${giftAccount.address} by ${fromAccount.address}`\n    );\n    const unsub = await api.tx.gift\n      .remove(giftAccount.address)\n      .signAndSend(fromAccount, (result) => {\n        console.log(`Current status is ${JSON.stringify(result, null, 2)}`);\n        if (result.status.isInBlock) {\n          console.log(\n            `Transaction included at blockHash ${result.status.asInBlock}`\n          );\n        } else if (result.status.isFinalized) {\n          console.log(\n            `Transaction finalized at blockHash ${result.status.asFinalized}`\n          );\n          unsub();\n        }\n      });\n  };\n\n  const generateGiftHandler = async (giftInfo) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!loginAccount) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // load sender account\n      const senderAccount = await keyring.getPair(loginAccount);\n\n      // generate mnemonic and interim recipiant account\n      const mnemonic = mnemonicGenerate();\n      const recipiantName = giftInfo.name;\n      const recipiantAccount = keyring.createFromUri(\n        mnemonic,\n        { name: recipiantName },\n        'ed25519'\n      );\n      const gift = {\n        from: senderAccount,\n        to: recipiantAccount,\n        amount: giftInfo.amount,\n      };\n\n      createGift(gift);\n\n      setGiftInfo({\n        secret: mnemonic,\n        name: giftInfo.name || '',\n        email: giftInfo.email || '',\n        amount: giftInfo.amount,\n      });\n      setShowGift(true);\n    }\n  };\n\n  const claimGiftHandler = async (secret) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!loginAccount) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const giftAccount = keyring.createFromUri(\n        mnemonic,\n        { name: 'interim_gift' },\n        'ed25519'\n      );\n\n      // load login account to transfer the gift to\n      const toAccount = await keyring.getPair(loginAccount);\n\n      const claim = {\n        giftAccount,\n        toAccount,\n      };\n      claimGift(claim);\n    }\n  };\n\n  const removeGiftHandler = async (secret) => {\n    if (apiState !== 'READY') {\n      console.log('api not READY!' + apiState);\n      window.alert(\n        'We were not able to connect to the blockchain!\\nPlease Check if you have set the correct rpc address for the chain and in case you are using any adblockers make sure it is turned off!'\n      );\n    } else if (!loginAccount) {\n      console.log('no account is selected');\n      window.alert(\n        'You need to sign in with your account to be able to send a gift 🔑🔓'\n      );\n    } else {\n      // retrive gift account from secret\n      const mnemonic = secret;\n      const giftAccount = keyring.createFromUri(\n        mnemonic,\n        { name: 'interim_gift' },\n        'ed25519'\n      );\n\n      // load sender account\n      const fromAccount = await keyring.getPair(loginAccount);\n\n      const gift = {\n        giftAccount,\n        fromAccount,\n      };\n      removeGift(gift);\n\n      setShowGift(false);\n    }\n  };\n\n  function loginHandler(accountAddr) {\n    setLoginAccount({ addr: accountAddr });\n  }\n\n  return (\n    <div>\n      <Grommet theme={grommet}>\n        <ThemeContext.Extend\n          value={{\n            global: {\n              colors: { brand: '#e6007a' },\n            },\n          }}>\n          <Box>\n            <PageHeader loginHandler={setLoginAccount} />\n            {!showGift && (\n              <First\n                generateGiftHandler={generateGiftHandler}\n                claimGiftHandler={claimGiftHandler}\n              />\n            )}\n            {showGift && (\n              <Layer\n                onEsc={() => setShowGift(false)}\n                onClickOutside={() => setShowGift(false)}\n                animate=\"false\">\n                <Box height=\"3rem\" direction=\"row\" justify=\"end\" pad=\"small\">\n                  <FormClose onClick={() => setShowGift(false)} />\n                </Box>\n                <Second\n                  {...giftInfo}\n                  removeGiftHandler={removeGiftHandler}\n                  closeHandler={() => setShowGift(false)}\n                />\n              </Layer>\n            )}\n          </Box>\n        </ThemeContext.Extend>\n      </Grommet>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <SubstrateContextProvider>\n      <Body />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}